write = (<@a> . <x> . [x]a)
print = ([#out] . write)

LinkedList = (
    <v> . new<@p> . [#null]p . [v]p . [#p]
)
push_back = (
    <v> . <@p> . p<pv> . p<@pp> . [#pp] . (
        null      -> [v] . LinkedList . <@npp> . [#npp]p . [pv]p,
        otherwise -> [#pp]p . [pv]p . [#pp] . [v] . push_back
    )
)
traverse = (
    <f> . <@p> . p<pv> . p<@pp> . [#pp]p . [pv]p . [#pp] . (
        null      -> [pv] . f,
        otherwise -> [pv] . f . [#pp] . [f] . traverse
    )
)
rtraverse = (
    <f> . <@p> . p<pv> . p<@pp> . [#pp]p . [pv]p . [#pp] . (
        null      -> [pv] . f,
        otherwise -> [pv] . [#pp] . [f] . rtraverse . f
    )
)

Pair  = (<y> . <x> . new<@p> . [y]p . [x]p . [#p])
fst   = (<@p> . p<x> . [x]p . [x])
snd   = (<@p> . p<x> . p<y> . [y]p . [x]p . [y])

main = (
    [3]  . [4]  . Pair . LinkedList . <@p>
    . [#p] . [5]  . [12] . Pair . push_back
    . [#p] . [8]  . [15] . Pair . push_back
    . [#p] . [7]  . [24] . Pair . push_back
    . [#p] . [20] . [21] . Pair . push_back
    . [#p] . [fst . print] . traverse
    . [#p] . [snd . print] . traverse
)